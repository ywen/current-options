{"version":3,"sources":["server/init.js","server/auth.js","addPosition/addModalOpen.js","closePosition/modalControl.js","position/fillInferredValues.js","addPosition/formData.js","SignUp/data.js","SignIn/data.js","encryption/getDecrypted.js","encryption/keyStore.js","encryption/getDecryptedPositions.js","List/data.js","Tabs/currentTab.js","store.js","commons/history.js","Tabs/onClick.js","Tabs/Tab.js","Tabs/index.js","addPosition/openModal.js","encryption/getEncrypted.js","encryption/getEncryptedObjectFromMap.js","server/store.js","position/model.js","position/save.js","commons/getCSVArrayFromFile.js","Menu.js","addPosition/closeModal.js","commons/getLabel.js","commons/TextField.js","addPosition/Row.js","addPosition/changeValue.js","addPosition/Form.js","position/close.js","closePosition/index.js","List/index.js","expiration/getStats.js","expiration/Row.js","expiration/index.js","server/listenToData.js","AuthenticatedArea.js","SignIn/changeValue.js","encryption/getKey.js","encryption/setEncryptionKey.js","SignIn/action.js","SignIn/index.js","SignUp/create.js","SignUp/changeValue.js","SignUp/index.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","init","firebase","apps","length","app","initializeApp","auth","addModalOpen","state","action","undefined","type","initializeState","Immutable","fromJS","closeModal","position","data","closedDate","Date","toLocaleString","modalControl","merge","isOpen","newData","get","key","value","fillInferredValues","original","result","quantity","purchasePrice","matches","match","set","Math","abs","isSell","Number","initialState","openDate","formData","getDecrypted","CryptoJS","AES","decrypt","toString","enc","Utf8","keyName","publicMethods","save","localStorage","setItem","fetch","getItem","getDecryptedPositions","positions","keyStore","map","decryped","id","Object","keys","forEach","name","prop","List","processData","filled","currentTab","link","reducers","combineReducers","addPositionFormData","signUpData","signInData","createStore","createBrowserHistory","onClick","dispatch","history","push","connect","isCurrent","extraClassName","className","openModal","getEncrypted","encrypt","getEncryptedObjectFromMap","fields","encrypted","encryptedKey","db","firestore","toDoc","userId","currentUser","uid","collection","doc","openPositionsStore","saveTo","a","exists","update","saveOpenPosition","closePosition","batch","openRef","closeRef","FieldValue","delete","toJS","commit","getKey","getOpenOptionsFromData","setKey","closedFields","metaFields","inferredFields","savePosition","field","uuidv4","store","getCSVArrayFromFile","file","Promise","resolve","reject","reader","FileReader","onload","event","target","split","i","object","symbol","readAsText","signOut","useState","setFile","importCSV","console","error","htmlFor","accept","onChange","e","files","required","disabled","getLabel","label","replace","toUpperCase","changeValue","fieldType","inputId","textFields","modelField","shouldCloseOnOverlayClick","ariaHideApp","onRequestClose","overlayClassName","concat","close","closedData","result1","result2","newPosition","closePositionFormData","renderTd","renderBody","size","index","k","getStats","list","reduce","p","totalOccupied","totalPotential","getPercentage","dividend","divisor","toFixed","func","createSelector","sort","p1","p2","groupBy","potential","occupied","potentialPercentage","occupiedPercentage","Row","stat","percent","render","stats","array","expirationDate","renderStat","listenToData","onSnapshot","user","useEffect","path","exact","from","to","lib","WordArray","random","setEncryptionKey","password","querySnapshot","email","signInWithEmailAndPassword","then","catch","create","createUserWithEmailAndPassword","App","setUser","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc3d8dda.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDrCiE6lS3W0FnhegGwpiR-Ger_eqcG_KA\",\n  authDomain: \"my-options-6eb19.firebaseapp.com\",\n  databaseURL: \"https://my-options-6eb19.firebaseio.com\",\n  projectId: \"my-options-6eb19\",\n  storageBucket: \"my-options-6eb19.appspot.com\",\n  messagingSenderId: \"980323281230\",\n  appId: \"1:980323281230:web:6ee11012ba23952f47961f\"\n};\n\nconst init = () => {\n  !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\n}\n\nexport default init;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport app from './init';\n\nconst auth = () => {\n  app();\n  return firebase.auth();\n};\n\nexport default auth;\n","const initialState = false;\n\nconst addModalOpen = (state, action) => {\n  if (state === undefined) return initialState;\n  if (action.type === 'OPEN_ADD_MODAL') {\n    return true;\n  }\n  if (action.type === 'CLOSE_ADD_MODAL') {\n    return false;\n  }\n  return state;\n};\n\nexport default addModalOpen;\n","import Immutable from 'immutable';\n\nconst initializeState = Immutable.fromJS({\n  closeModal: false,\n  position: null,\n  data: { closedDate: new Date().toLocaleString() },\n});\n\nconst modalControl = (state, action) => {\n  if (state === undefined) return initializeState;\n  if (action.type === 'OPEN_CLOSE_MODAL') {\n    return state.merge({\n      isOpen: true,\n      position: action.position,\n    });\n  }\n  if (action.type === 'CLOSE_CLOSE_MODAL') {\n    return initializeState;\n  }\n  if (action.type === 'CLOSE_POSITION_VALUE_CHANGED') {\n    const data = state.get('data');\n    const newData = data.merge({\n      [action.key]: action.value,\n    })\n    return state.merge({\n      data: newData,\n    });\n  }\n  return state;\n};\n\nexport default modalControl;\n","const fillInferredValues = ({original}) => {\n  let result = original;\n  const quantity = original.get('quantity');\n  const purchasePrice = original.get('purchasePrice');\n  const symbol = original.get('symbol');\n  const matches = symbol.match(/-([A-Z]+)+([0-9^.]+)([P|C])([0-9,.]+)/)\n  if (matches) {\n    result = result.set('stockSymbol', matches[1]);\n    result = result.set('expirationDate', matches[2]);\n    result = result.set('optionType', matches[3]);\n    result = result.set('strike', matches[4]);\n    if(quantity) {\n      result = result.set('moneyOccupied', Math.abs(matches[4] * quantity * 100));\n      const isSell = Number(quantity) < 0;\n      if (purchasePrice && isSell) {\n        result = result.set('potentialGain', Math.abs(purchasePrice * 100 * quantity));\n        result = result.set('potentialLose', 'unlimited');\n      }\n      if (purchasePrice && !isSell) {\n        result = result.set('potentialGain', 'unlimited');\n        result = result.set('potentialLose', purchasePrice * 100);\n      }\n    }\n  }\n  return result;\n};\n\nexport default fillInferredValues;\n","import Immutable from 'immutable';\n\nimport fillInferredValues from '../position/fillInferredValues';\n\nconst initialState = Immutable.fromJS({\n  openDate: new Date().toLocaleString(),\n});\n\nconst formData = (state, action) => {\n  if (state === undefined) return initialState;\n  if (action.type === 'ADD_POSITION_VALUE_CHANGED') {\n    let result = state.set(action.key, action.value);\n    result = fillInferredValues({original: result});\n    return result;\n  }\n  if (action.type === 'ADD_POSITION_CLEAR_FORM_DATA') {\n    return initialState;\n  }\n  return state;\n};\n\nexport default formData;\n","import Immutable from 'immutable';\n\nconst initialState = Immutable.fromJS({});\n\nconst data = (state, action) => {\n  if (state === undefined) return initialState;\n  if (action.type === 'SIGN_UP_VALUE_CHANGED') {\n    const { key, value} = action;\n    return state.set(key, value);\n  }\n  return state;\n};\n\nexport default data;\n","import Immutable from 'immutable';\n\nconst initialState = Immutable.fromJS({});\n\nconst data = (state, action) => {\n  if (state === undefined) return initialState;\n  if (action.type === 'SIGN_IN_VALUE_CHANGED') {\n    const { key, value} = action;\n    return state.set(key, value);\n  }\n  return state;\n};\n\nexport default data;\n","import CryptoJS from 'crypto-js';\n\nconst getDecrypted = ({ key, value }) => {\n  return CryptoJS.AES.decrypt(value, key).toString(CryptoJS.enc.Utf8);\n};\n\nexport default getDecrypted;\n","const keyName = 'my-options-encryption-key';\n\nconst fetch = () => localStorage.getItem(keyName);\n\nconst save = ({ key }) => localStorage.setItem(keyName, key);\n\nconst publicMethods = {\n  save,\n  fetch,\n};\n\nexport default publicMethods;\n","import getDecrypted from './getDecrypted';\nimport keyStore from './keyStore';\n\nconst getDecryptedPositions = ({ positions }) => {\n  const key = keyStore.fetch();\n  return positions.map((position) => {\n    const decryped = { id: position.id };\n    Object.keys(position).forEach((name) => {\n      if (name !== 'id') {\n        const prop = getDecrypted({ key, value: name });\n        decryped[prop] = getDecrypted({ key, value: position[name] });\n      }\n    });\n    return decryped;\n  });\n};\n\nexport default getDecryptedPositions;\n","import Immutable from 'immutable';\n\nimport getDecryptedPositions from '../encryption/getDecryptedPositions';\nimport fillInferredValues from '../position/fillInferredValues';\n\nconst initialState = Immutable.List([]);\n\nconst processData = (state, action) => {\n  if (!state) return initialState;\n  if (action.type === 'POSITION_CHANGED') {\n    const decrypted = getDecryptedPositions({ positions: action.data });\n    const filled = decrypted.map(position => {\n      return fillInferredValues({ original: Immutable.fromJS(position) });\n    });\n    return Immutable.fromJS(filled);\n  }\n  return state;\n};\n\nexport default processData;\n","const initialState = '/list';\n\nconst currentTab = (state, action) => {\n  if (!state) return initialState;\n  if (action.type === 'TAB_CHANGED') {\n    return action.link;\n  }\n  return state;\n}\n\nexport default currentTab;\n","import { createStore, combineReducers } from 'redux';\nimport addModalOpen from './addPosition/addModalOpen';\nimport closeModal from './closePosition/modalControl';\nimport addPositionFormData from './addPosition/formData';\nimport signUpData from './SignUp/data';\nimport signInData from './SignIn/data';\nimport positions from './List/data';\nimport currentTab from './Tabs/currentTab';\n\nconst reducers = combineReducers({\n  addModalOpen,\n  closeModal,\n  addPositionFormData,\n  currentTab,\n  signUpData,\n  signInData,\n  positions,\n});\nexport default createStore(reducers);\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import history from '../commons/history';\n\nconst onClick = ({ dispatch, link }) => {\n  dispatch({ type: 'TAB_CHANGED', link });\n  history.push(link);\n};\n\nexport default onClick;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport onClick from './onClick';\n\nconst Tab = ({ isCurrent, dispatch, name, link }) => {\n  const extraClassName = isCurrent ? 'tab__link--current' : 'tab__link'\n  return (\n    <li className={`tab__link ${extraClassName}`} onClick={() => onClick({link, dispatch})}>{name}</li>\n  )\n};\n\nexport default connect(state => ({ }))(Tab);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './index.scss';\n\nimport Tab from './Tab';\n\nconst Tabs = ({ currentTab, dispatch }) => {\n  return (\n    <ul className='tab__container'>\n      <Tab isCurrent={currentTab==='/list'} name='List View' link='/list' key='list'/>\n      <Tab isCurrent={currentTab==='/expiration'} name='Expiration View' link='/expiration' key='expiration'/>\n    </ul>\n  );\n};\n\nexport default connect(state => ({\n  currentTab: state.currentTab,\n}))(Tabs);\n","const openModal = ({dispatch}) => dispatch({ type: 'OPEN_ADD_MODAL' });\n\nexport default openModal;\n","import CryptoJS from 'crypto-js';\n\nconst getEncrypted = ({ key, value }) => {\n  return CryptoJS.AES.encrypt(value, key).toString();\n};\n\nexport default getEncrypted;\n","import getEncrypted from './getEncrypted';\nimport keyStore from './keyStore';\n\nconst getEncryptedObjectFromMap = ({ data, fields }) => {\n  const result = {};\n  const key = keyStore.fetch();\n  fields.forEach((name) => {\n    const value = data.get(name);\n    const encrypted = getEncrypted({ key, value });\n    const encryptedKey = getEncrypted({ key, value: name });\n    result[encryptedKey] = encrypted;\n  });\n  return result;\n};\n\nexport default getEncryptedObjectFromMap;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport auth from './auth';\n\nconst db = () => firebase.firestore();\nconst collection = () => {\n  const userId = auth().currentUser.uid;\n  return db().collection(userId);\n};\n\nconst toDoc = ({ name }) => collection().doc(name);\nconst keyStore = () => toDoc({ name: 'key '});\nconst openPositionsStore = () => toDoc({ name: 'openPositions' });\nconst closedPositionsStore = () => toDoc({ name: 'closedPositions' });\n\nconst getKey = () => keyStore().get();\n\nconst setKey = ({ key }) => keyStore().set({ key });\n\nconst saveTo = async ({ doc, position }) => {\n  const snapshot = await doc().get();\n  if (!snapshot.exists) {\n    await doc().set({});\n  }\n  await doc().update({\n    [position.id]: position,\n  });\n};\n\nconst saveOpenPosition = async ({ position }) => {\n  await saveTo({ doc: openPositionsStore, position });\n};\n\nconst closePosition = async ({ position }) => {\n  const batch = db().batch();\n  const openRef = openPositionsStore();\n  const closeRef = closedPositionsStore();\n  batch.update(openRef, {\n    [position.get('id')]: firebase.firestore.FieldValue.delete(),\n  });\n\n  const snapshot = await closeRef.get();\n  if (!snapshot.exists) {\n    batch.set(closeRef, {});\n  }\n  batch.update(closeRef, {\n    [position.get('id')]: position.toJS(),\n  });\n  return batch.commit();\n};\n\nconst getOpenOptionsFromData = ({ doc }) => {\n  const positions = doc.data();\n  if (!positions) {\n    return [];\n  }\n  const result = [];\n  Object.keys(positions).forEach((key) => {\n    result.push(positions[key]);\n  });\n  return result;\n};\n\nconst publicMethods = {\n  closePosition,\n  getKey,\n  getOpenOptionsFromData,\n  openPositionsStore,\n  saveOpenPosition,\n  setKey,\n};\n\nexport default publicMethods;\n","const metaFields = ['symbol', 'quantity', 'purchasePrice', 'openDate'];\nconst inferredFields = [\n  'stockSymbol',\n  'expirationDate',\n  'optionType',\n  'strike',\n  'moneyOccupied',\n  'potentialGain',\n  'potentialLose',\n];\n\nconst closedFields = ['closingPrice', 'closedDate']\n\nconst fields = {\n  closedFields,\n  metaFields,\n  inferredFields,\n};\n\nexport default fields;\n","import { v4 as uuidv4 } from 'uuid';\n\nimport getEncryptedObjectFromMap from '../encryption/getEncryptedObjectFromMap';\nimport store from '../server/store';\nimport field from './model';\n\nconst savePosition = ({ data }) => {\n  const result = getEncryptedObjectFromMap({ data, fields: field.metaFields });\n  result.id = uuidv4();\n  store.saveOpenPosition({ position: result });\n};\n\nexport default savePosition;\n","// name: 0\n// quantity: 1\n// purchasePrice: 6\n// purchaseDate: 8\nconst getCSVArrayFromFile = ({ file }) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const array = event.target.result.split('\\r\\n');\n      const result = array.map(a => a.split(','));\n      const data = [];\n      for (let i=1; i < result.length; i++) {\n        if (result[i][0].length > 0) {\n          const object = {\n            symbol: result[i][0],\n            quantity: result[i][1],\n            purchasePrice: result[i][6],\n            openDate: result[i][8],\n          }\n          data.push(object);\n        }\n      }\n      resolve(data);\n    }\n    reader.readAsText(file)\n  });\n};\n\nexport default getCSVArrayFromFile;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Immutable from 'immutable';\n\nimport './Menu.scss';\n\nimport openModal from './addPosition/openModal';\nimport savePosition from './position/save';\nimport getCSVArrayFromFile from './commons/getCSVArrayFromFile';\n\nimport auth from './server/auth';\n\nconst signOut = () => auth().signOut();\n\nconst Menu = ({ dispatch }) => {\n  const [ file, setFile ] = useState(null);\n\n  const importCSV = async () => {\n    const data = await getCSVArrayFromFile({ file });\n    for (let i = 0; i < data.length; i++) {\n      try {\n        await savePosition({ data: Immutable.fromJS(data[i]) });\n      } catch(e) {\n        console.error(e)\n      }\n    }\n  };\n\n  return (\n    <div className='menu-container'>\n      <button className='menu__item menu__addPosition' onClick={() => openModal({ dispatch })}>\n        Add Position\n      </button>\n      <div className=\"menu__item\">\n        <label htmlFor=\"upload\">Import CSV</label>\n        <input\n          type=\"file\"\n          id='upload'\n          accept=\".csv\"\n          onChange={(e) => {setFile(e.target.files[0]) }}\n          required\n        />\n        <button disabled={!file} onClick={importCSV}>Import</button>\n      </div>\n      <button onClick={signOut} className='menu__item menu__signOut' key='signout'>Sign Out</button>\n    </div>\n  )\n};\n\nexport default connect(state => ({}))(Menu);\n","const closeModal = ({dispatch}) => dispatch({ type: 'CLOSE_ADD_MODAL' });\nexport default closeModal;\n","const getLabel = ({name}) => {\n  const label = name.replace(/([A-Z])/g, ' $1');\n  return label.replace(/^./, label[0].toUpperCase());\n};\n\nexport default getLabel;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './TextField.scss';\n\nimport getLabel from './getLabel';\n\nconst TextField = ({ data, name, dispatch, changeValue, fieldType='text' }) => {\n  const value = data ? data.get(name) : '';\n  const inputId = `form-input__${name}`;\n  const changed = (e) => {\n    changeValue({dispatch, key: name, value: e.target.value})\n  };\n  return (\n    <div className='text-field__container'>\n      <label\n        className='text-field__label'\n        htmlFor={inputId}\n        key={`${name}-label`}\n      >\n        {`${getLabel({name})}:`}\n      </label>\n      <input\n        id={inputId}\n        key={`${name}-field`}\n        className={`text-field__input text-field__input--${name}`}\n        type={fieldType}\n        value={value || ''}\n        onChange={changed}\n      />\n    </div>\n  );\n};\n\nexport default connect(state => ({}))(TextField);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './Row.scss';\n\nimport getLabel from '../commons/getLabel';\n\nconst Row = ({ data, name, dispatch }) => {\n  const value = data.get(name);\n  return (\n    <div className='add-position-row__container'>\n      <div className='add-position-row__label'>\n        {`${getLabel({name})}:`}\n      </div>\n      <div className='add-position-row__value'>\n        {value}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(state => ({\n  data: state.addPositionFormData,\n}))(Row);\n","const changeValue = ({ dispatch, value, key}) => (\n  dispatch({ type: 'ADD_POSITION_VALUE_CHANGED', value, key })\n);\n\nexport default changeValue;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport closeModal from './closeModal';\nimport TextField from '../commons/TextField';\nimport Row from './Row';\nimport '../commons/Modal.scss';\nimport changeValue from './changeValue';\nimport savePosition from '../position/save';\nimport modelField from '../position/model';\n\nconst textFields = ({ data }) => {\n  return modelField.metaFields.map(field => {\n    return <TextField changeValue={changeValue} data={data} name={field} key={field} />\n  })\n};\n\nconst displayRows = () => {\n  const fields = modelField.metaFields.concat(modelField.inferredFields);\n  return fields.map(field => {\n    return <Row name={field} key={`row-${field}`} />;\n  });\n};\n\nconst Form = ({ addModalOpen, dispatch, data }) => {\n  const save = () => {\n    savePosition({ data });\n  };\n\n  return (\n    <Modal\n      isOpen={addModalOpen}\n      shouldCloseOnOverlayClick={true}\n      ariaHideApp={false}\n      onRequestClose={() => closeModal({ dispatch })}\n      overlayClassName='modal__overlay'\n    >\n      <div className='modal__form'>\n        {textFields({ data })}\n        <button onClick={save} className='modal__save'>Save</button>\n      </div>\n      <div className='modal__information'>\n        {displayRows()}\n      </div>\n    </Modal>\n  );\n};\n\nexport default connect(state => ({\n  addModalOpen: state.addModalOpen,\n  data: state.addPositionFormData,\n}))(Form);\n","import Immutable from 'immutable';\nimport store from '../server/store';\n\nimport field from './model';\nimport getEncryptedObjectFromMap from '../encryption/getEncryptedObjectFromMap';\n\nconst close = async ({ position, closedData }) => {\n  const result1 = getEncryptedObjectFromMap({ data: position, fields: field.metaFields });\n  const result2 = getEncryptedObjectFromMap({\n    data: closedData,\n    fields: field.closedFields,\n  });\n  const newPosition = Immutable.fromJS(result1).merge(result2).merge({ id: position.get('id') });\n  store.closePosition({ position: newPosition });\n};\n\nexport default close;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\n\nimport modelField from '../position/model';\nimport TextField from '../commons/TextField';\n\nimport closePosition from '../position/close';\n\nconst Form = ({ dispatch, closeModal }) => {\n  const isOpen = closeModal.get('isOpen');\n  const position = closeModal.get('position');\n  const data = closeModal.get('data');\n\n  const changeValue = ({ dispatch, value, key}) => (\n    dispatch({ type: 'CLOSE_POSITION_VALUE_CHANGED', value, key })\n  );\n\n  const textFields = () => {\n    return modelField.closedFields.map(field => {\n      return <TextField changeValue={changeValue} data={data} name={field} key={field} />\n    })\n  };\n  const close = () => {\n    dispatch({type: 'CLOSE_CLOSE_MODAL' });\n  };\n\n  const save = () => {\n    close();\n    closePosition({ position, closedData: data });\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      shouldCloseOnOverlayClick={true}\n      ariaHideApp={false}\n      onRequestClose={() => close({ dispatch })}\n      overlayClassName='modal__overlay'\n    >\n      <div className='modal__form'>\n        {textFields()}\n        <button onClick={save} className='modal__save'>Save</button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default connect(state => ({\n  closeModal: state.closeModal,\n  data: state.closePositionFormData,\n}))(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport getLabel from '../commons/getLabel';\n\nimport modelField from '../position/model';\n\nimport './index.scss';\n\nconst close = ({ position, dispatch }) => {\n  return (\n    <td\n      key= {`close-button-${position.get('id')}`}\n      className='list__td'\n    >\n      <button\n        className='list__close-button'\n        onClick={ () => dispatch({ type: 'OPEN_CLOSE_MODAL', position }) }\n      >\n        Close\n      </button>\n    </td>\n  );\n};\n\nconst renderTd = ({position, dispatch}) => {\n  const fields = modelField.metaFields.concat(modelField.inferredFields);\n  const fieldTds = fields.map((field) => {\n    return (\n      <td key={`td-${field}`} className='list__td'>\n        {position.get(field)}\n      </td>\n    );\n  });\n  return fieldTds.concat([close({ position, dispatch })]);\n};\n\nconst renderBody = ({ positions, dispatch }) => {\n  if (positions.size === 0) {\n    return false;\n  }\n  const r = positions.map((position, index) => {\n    return <tr key={`position-tr-${index}`} className='list__tr'>{renderTd({position, dispatch})}</tr>\n  });\n  return r.toJS();\n};\n\nconst renderHeaders = () => {\n  const fields = modelField.metaFields.concat(modelField.inferredFields).concat(['Actions']);\n  return fields.map((k) => {\n    return <th key={`th-${k}`} className='list__th'>{getLabel({name: k})}</th>;\n  });\n};\n\nconst List = ({ positions, dispatch }) => {\n  return (\n    <div className='list__container'>\n      <table className='list__table'>\n        <thead className='list__thead'>\n          <tr>\n            {renderHeaders()}\n          </tr>\n        </thead>\n        <tbody>\n          {renderBody({ positions, dispatch })}\n        </tbody>\n      </table>\n    </div>\n  )\n};\n\nexport default connect(state => ({\n  positions: state.positions,\n}))(List);\n","import { createSelector } from 'reselect';\nimport Immutable from 'immutable';\n\nconst getStats = ({ list }) => {\n  return list.reduce((result, p) => {\n    const totalOccupied = Number(p.get('moneyOccupied')) + result.totalOccupied;\n    const totalPotential = Number(p.get('potentialGain')) + result.totalPotential;\n    return { totalOccupied, totalPotential };\n  }, { totalOccupied: 0, totalPotential: 0 });\n};\n\nconst getPercentage = ({ dividend, divisor }) => {\n  return `% ${(dividend / divisor * 100).toFixed(2)}`\n};\n\nconst func = createSelector(\n  (state) => state.positions,\n  (positions) => {\n    const { totalPotential, totalOccupied } = getStats({list: positions });\n    const sorted = positions.sort((p1, p2) => {\n      return p1.get('expirationDate') > p2.get('expirationDate') ? 1 : -1;\n    });\n    const grouped = sorted.groupBy(p => p.get('expirationDate'));\n    return grouped.map((list, key) => {\n      const { totalPotential: potential, totalOccupied: occupied } = getStats({ list });\n      const potentialPercentage = getPercentage({ dividend: potential, divisor: totalPotential });\n      const occupiedPercentage = getPercentage({ dividend: occupied, divisor: totalOccupied });\n      return Immutable.fromJS({ potential, occupied, potentialPercentage, occupiedPercentage });\n    });\n  }\n);\n\nexport default func;\n","import getLabel from '../commons/getLabel';\nimport './Row.scss';\n\nconst Row = ({ stat, name }) => {\n  const percent = stat.get(`${name}Percentage`);\n  return (\n    <div className='expiration-view__row'>\n      <div className='expiration-view__stat--label'>{getLabel({ name })}</div>\n      <div className='expiration-view__stat'>{`$ ${stat.get(name)}`}</div>\n      <div className='expiration-view__percentage'>{percent}</div>\n    </div>\n  )\n};\n\nexport default Row;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport getStats from './getStats';\nimport Row from './Row';\n\nimport './index.scss';\n\nconst renderStat = ({ stat, expirationDate }) => {\n  return(\n    <div className='expiration-view__stat-container'>\n      <div className='expiration-view__header-row'>\n        <div className='expiration-view__expiration-date__label'>Expiration Date</div>\n        <div className='expiration-view__expiration-date'>{expirationDate}</div>\n      </div>\n      <Row stat={stat} name={'potential'} key='potential' />\n      <Row stat={stat} name={'occupied'} key='occupied' />\n    </div>\n  );\n};\n\nconst render = ({ stats }) => {\n  const array = [];\n  stats.forEach((stat, expirationDate) => array.push(renderStat({ stat, expirationDate })));\n  return array;\n};\n\nconst Expiration = ({ stats }) => {\n  return (\n    <div className='expiration-view__container'>\n      {render( {stats} )}\n    </div>\n  )\n};\n\nexport default connect(state => ({\n  stats: getStats(state),\n}))(Expiration);\n","import store from './store';\n\nconst listenToData = ({ dispatch }) => {\n  store.openPositionsStore().onSnapshot((doc) => {\n    const data = store.getOpenOptionsFromData({ doc });\n    dispatch({ type: 'POSITION_CHANGED', data });\n  });\n};\n\nexport default listenToData;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nimport Tabs from './Tabs';\nimport Menu from './Menu';\nimport AddForm from './addPosition/Form';\nimport CloseModal from './closePosition';\nimport List from './List';\nimport Expiration from './expiration';\nimport listenToData from './server/listenToData';\n\nimport './AuthenticatedArea.scss'\n\nconst AuthenticatedArea = ({ user, dispatch }) => {\n  useEffect(() => {\n    if (user) {\n      listenToData({ dispatch });\n    }\n  }, [user, dispatch]);\n  return (\n    <div className='authenticated__main'>\n      <Menu key='menu' />\n      <Tabs key='tabs' />\n      <AddForm key='addForm' />\n      <CloseModal key='closeModal' />\n      <Route path=\"/list\" key='list-route'>\n        <List key='list-view'/>\n      </Route>\n      <Route path=\"/expiration\" key='expiration-route'>\n        <Expiration key='expiration-view' />\n      </Route>\n      <Redirect exact from=\"/\" to=\"/list\" />\n    </div>\n  );\n};\n\nexport default connect(state => ({}))(AuthenticatedArea);\n","const changeValue = ({ dispatch, key, value }) => {\n  dispatch({ type: 'SIGN_IN_VALUE_CHANGED', key, value });\n}\n\nexport default changeValue;\n","import CryptoJS from 'crypto-js';\n\nconst getKey = () => CryptoJS.lib.WordArray.random(512 / 8).toString();\n\nexport default getKey;\n","import store from '../server/store';\nimport getKey from './getKey';\nimport getEncrypted from './getEncrypted';\nimport getDecrypted from './getDecrypted';\nimport keyStore from './keyStore';\n\nconst setEncryptionKey = async ({ dispatch, password }) => {\n  const querySnapshot = await store.getKey();\n  if (querySnapshot.exists) {\n    const key = getDecrypted({ value: querySnapshot.data().key, key: password });\n    keyStore.save({ key });\n  } else {\n    const key = getKey();\n    const encryptedKey = getEncrypted({ key: password, value: key })\n    await store.setKey({ key: encryptedKey })\n    keyStore.save({ key });\n  }\n};\n\nexport default setEncryptionKey;\n","import auth from '../server/auth';\n\nimport history from '../commons/history';\nimport setEncryptionKey from '../encryption/setEncryptionKey';\n\nconst action = ({ dispatch, data }) => {\n  const email = data.get('email');\n  const password = data.get('password');\n  auth().signInWithEmailAndPassword(email, password).then((user) => {\n    setEncryptionKey({ dispatch, password });\n    history.push('/');\n  }).catch((error) => {\n    console.error(error);\n  });\n}\n\nexport default action;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport './index.scss'\nimport TextField from '../commons/TextField';\n\nimport changeValue from './changeValue';\nimport action from './action';\n\nconst SignIn = ({ dispatch, data }) => {\n  return (\n    <div className='signin__container'>\n      <TextField changeValue={changeValue} data={data} name='email' key='symbol' />\n      <TextField changeValue={changeValue} fieldType='password' data={data} name='password' key='password' />\n      <div className='signin__input-container'>\n        <button onClick={() => action({dispatch, data})}>Sign In</button>\n      </div>\n      <div className='signin__input-container'>\n        <Link to='/signup'>Sign up</Link>\n      </div>\n    </div>\n  )\n};\n\nexport default connect(state => (\n  {\n    data: state.signInData,\n  }\n))(SignIn);\n","import auth from '../server/auth';\nimport setEncryptionKey from '../encryption/setEncryptionKey';\nimport history from '../commons/history';\n\nconst create = ({ data, dispatch }) => {\n  const email = data.get('email');\n  const password = data.get('password');\n  auth().createUserWithEmailAndPassword(email, password).then(user => {\n    setEncryptionKey({ dispatch, password });\n    history.push('/');\n  });\n}\n\nexport default create;\n","const changeValue = ({ dispatch, key, value }) => {\n  dispatch({ type: 'SIGN_UP_VALUE_CHANGED', key, value });\n}\n\nexport default changeValue;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport TextField from '../commons/TextField';\n\nimport './index.scss'\n\nimport create from './create';\nimport changeValue from './changeValue';\n\nconst SignUp = ({ dispatch, data }) => {\n  return ([\n    <div className='signup__container' key='fields-container'>\n      <TextField changeValue={changeValue} data={data} name='email' key='symbol' />\n      <TextField changeValue={changeValue} fieldType='password' data={data} name='password' key='password' />\n      <TextField changeValue={changeValue} fieldType='password' data={data} name='confirmation' key='confirmation' />\n    </div>,\n    <div className='signup__input-container' key='submit-button'>\n      <button onClick={() => create({ dispatch, data })}>Sign Up</button>\n    </div>,\n    <div className='signup__input-container' key='signin-link'>\n      <Link to='/signin'>Sign In</Link>\n    </div>\n  ])\n};\n\nexport default connect(state => {\n  return {\n    data: state.signUpData,\n  }\n})(SignUp);\n","import React, { useEffect, useState } from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport auth from './server/auth';\n\nimport store from './store';\nimport AuthenticatedArea from './AuthenticatedArea';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\n\nimport history from './commons/history';\n\nconst App = () => {\n  const [ user, setUser ] = useState(null);\n  useEffect(() => {\n    const onAuthStateChanged = user => {\n      if (user) {\n        setUser(user)\n      } else {\n        setUser(null)\n      }\n    };\n    const subscriber = auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber; // unsubscribe on unmount\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n    } else {\n      history.push('/signin');\n    }\n  }, [user]);\n\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <Switch>\n          <Route path='/signin'>\n            <SignIn />\n          </Route>\n          <Route path='/signup'>\n            <SignUp />\n          </Route>\n          <Route path='/'>\n            <AuthenticatedArea user={user} />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}